#%RAML 1.0
---
title: Event Webhook
version: v1
baseUri: https://api.bring.com/notification
mediaType: application/json
annotationTypes:
  hideInDocumentation: boolean
  hideRequired: boolean
types:
  WebhookRequest:
    type: object
    properties:
      reference:
        type: string
        required: true
      event_group:
        type: string
        required: true
      configuration:
        type: Configuration
        required: true
  WebhookBatchRequest:
      type: object
      properties:
        references:
          type: string[]
          required: true
        event_group:
          type: string
          required: true
        configuration:
          type: Configuration
          required: true
  Webhook:
    type: object
    properties:
      id:
        type: string
        required: false
        description: Represents an unique identifiaction
      authenticator:
        type: string
        required: false
        description: Represents your authentication identification
      reference:
        type: string
        required: true
      event_group:
        type: string
        required: true
        description: Represents the group(s) that is part of this webhook
      expiry:
        type: datetime
        required: false
        description: Populated on fetching existsing webhook
      created:
        type: datetime
        required: false
        description: Populated on fetching existsing webhook
      configuration:
        type: Configuration
        required: true
  Configuration:
    type: object
    properties:
      url:
        type: string
        required: true
      content_type:
        type: string
        required: false
      headers:
        type: ConfigurationHeader[]
        required: false
  ConfigurationHeader:
    type: object
    properties:
      key:
        type: string
        required: true
      value:
        type: string
        required: true
        description: This value will not be available in any response
  ErrorResponse:
    type: object
    properties:
      uuid:
        type: string
        description: This represents an unique identifier for the failing request. Can be used whilst contacting Bring
      status:
        type: string
        description: Represents a 3/4 digit code that can be used to identify the problem
      reason:
        type: string
        required: false
        description: Can contain some hints on what went wrong during the request

documentation:
- title: Introduction
  content: |
    Webhooks in Bring allows you to subscribe to certain "event groups" that can happen on parcels and shipments. Whenever a event occurs in Bring for a subscribed parcel/shipment,
    we'll send a HTTP POST to the callback URL as defined in the Webhook configuration.

    Using webhooks is quite simple and allows for immediate feedback based on the event that were issued for the subscribed entity. Additionally, it allows integrations of customers to become simpler,
    as no scheduled mechanism is required to be implemented. Just define an endpoint that accepts HTTP POST, and the event details will be sent there.

    Quite awesome!
- title: Authentication
  content: |
    In order to use the API, you will need to register with Mybring and create an API key. Whenever issuing a request, the following headers is required to be present.

    | Header | Example | Comment |
    |:-------|:--------|:--------|
    | `X-MyBring-API-Uid` | `john.doe@example.com` | Mybring login ID |
    | `X-MyBring-API-Key` | `1234abc-abcd-1234-5678-abcd1234abcd` | Mybring login's API key |
    | `X-Bring-Client-URL` | `https://example.com/` | A URL that sort of identifies you |

    **Note:** See the [getting started guide on authentication](/api/#authentication) if you want to know more about how to get started with authentication for APIs in Mybring.
- title: API limitations
  content: |
    There is some known/deliberate limitations for the API:

    | Resource | Description |
    |:--------|:---------|
    | All requests | The Webhook API allows a maximum of **50 concurrent requests** per user |
    | Batch creation | Whilst creating requests for webhooks is a feature we encurage to use, its max amount of parcels / shipments is limited to **100 per request**. If you have more than 100 at a time, split to mulitple requests using the batch-API |
    | Webhook testing | Triggering a request using the Test-api allows a maximum of **10 concurrent requests** per user
- title: Events
  content: |
    When registering for a webhook you can choose between a range of different events that can send requests for.
    When subscribing, it is a good idea to limit the amount of events to subscribe to. As we send an event on each of the events occurred - the amount of HTTP requests your server receives can grow. So, as a good practise, keep the list of event groups small.

    Each of the events corresponds to a certain set of actions that can happen to the package/shipment you subscribe for. For instance, if you subscribe to `DELIVERED`, all internal Bring-events
    will trigger a request to your defined callback URL.

    Our available events are:

    | Name | Description |
    |:--------|:---------|
    | TERMINAL | - |
    | CUSTOMS | - |
    | DELIVERED | - |
    | DELIVERED_SENDER | - |
    | ATTEMPTED_DELIVERY | - |
    | DEVIATION | - |
    | HANDED_IN | - |
    | COLLECTED | - |
    | INTERNATIONAL | - |
    | IN_TRANSIT | - |
    | DELIVERY_ORDERED | - |
    | DELIVERY_CHANGED | - |
    | DELIVERY_CANCELLED | - |
    | TRANSPORT_TO_RECIPIENT | - |
    | NOTIFICATION_SENT | - |
    | PRE_NOTIFIED | - |
    | READY_FOR_PICKUP | - |
    | RETURN | - |
    | ARRIVED_DELIVERY | - |
    | ARRIVED_COLLECTION | - |
    | READY_FROM_SENDER | - |

    **Note:** As existing subscribed webhooks is locked for modifications, you will have to delete and recreate the subscription upon changes to the list of subscribed events.

    **Note:** Right now we do not support wildcard events (`*` or `ALL`).

- title: Receiving Callbacks
  content: |
    In order to receive callbacks from Bring, your callback URL must be accessible on the internet and able to receive requests from Bring.
    Additionally, to minimize risk, you should also provide `https`-enabled endpoints and use some kind of authentication mechanism.

    For authentication, we recommand utilizing the header funcitonality provided by the webhook configuration.
- title: Payload
  content: |

    #### Payload delivery headers

    `HTTP POST` payloads that are delivered to your webhook's configured URL endpoint will contain several Bring specific headers::

    | Header | Description |
    |:-------|:--------|
    | `X-Bring-Application` | Identification of the application that sent the request to your endpoint |
    | `X-bring-Correlation` | Correlation Id can be used whilst contacting Bring on error cases |
    | `X-bring-Version` | Indicates the version of application |

    #### Example

    Requests issued from Bring to your endpoint will look similar to this:

    ```
      POST /callback/webhook HTTP/1.1
      host: localhost:80
      Accept: application/json
      User-Agent: Bringcast-Webhook/v1.0.34-SNAPSHOT
      X-Bring-Application: BMEC
      X-bring-Correlation: xA3n7
      Content-Type: application/json
      Content-Length: 188

      {
        "status":"IN_TRANSIT",
        "id":"ad84cbca-2e89-43e0-a301-a8d5d7fe7804",
        "consignment":"SHIPMENTNUMBER",",
        "package":"TESTPACKAGEDELIVERED
        "created":[2019,2,8,7,36,46,705000000],
        "pushed":[2019,2,8,7,36,46,711502000]
      }
    ```
- title: Q & A
  content: |

    #### Can I have multiple Webhooks for the same parcel?
    You can have several webhooks on the same parcel/shipment, as long as the event groups are different.

    #### How many active Webhooks can I have at the same time?
    There is no limitation for the moment.

    #### What happens after `DELIVERED` is reached?
    Your subscription will end.

    #### Expiration duration, can I define that?
    No.

    #### Can I get a history of events that were sent for a subscription?
    Not in this version. It may be available in the future.

    #### Will I be able to see all my previous webhooks?
    No.
/api/v1/webhooks:
  displayName: Create webhook
  description: |
    Create a new subscription for a webhook
  post:
    description: Register a new webhook subscription for a parcel or shipment
    body:
      application/json:
        type: WebhookRequest
        examples:
          valid_request:
            displayName: Valid Request
            value: !include examples/create-webhook-request.json
    responses:
      201:
        description: Returns the registered webhook after creation request.
        body:
          application/json:
            type: Webhook
            examples:
              reqister_webhook:
                displayName: Registered webhook
                value: !include examples/webhook-request.json
      400:
        displayName: Bad request
        description: Unable to register webhook due to some bad request from the client side.
        body:
          application/json:
            type: ErrorResponse
            examples:
              invalid_webhook:
                displayName: Invalid creation request
                value: !include examples/create-webhook-invalid.json
      401:
        displayName: Error
        description: Missing authentication headers
      429:
        displayName: Too many requests
        description: This may happen due to client sending too many requests. Try again a bit later, or decrease amount of requests
      500:
        displayName: Internal Bring error
        description: If this happens, try again a bit later as it might be due to some internal mechanism not working
/batch/api/v1/webhooks:
  displayName: Create multiple webhooks
  description: |
        Create a range of new webhooks based on a list of any parcel or shipment.
        Webhooks lives for up to one month, or until the entity subscribed for is marked as "delivered by Bring".
  post:
    description: Register a new webhook subscription for an array parcels and/or shipments
    body:
      application/json:
        type: WebhookBatchRequest
        examples:
          valid_request:
            displayName: Valid Request
            value: !include examples/batch-create-webhook-request.json
    responses:
      201:
        description: |
          Returns the registered webhook after creation request.
        body:
          application/json:
            type: Webhook
            examples:
              reqister_webhook:
                displayName: Registered webhook
                value: !include examples/batch-webhook-request.json
      400:
        displayName: Bad request
        description: |
          Unable to register webhook due to some bad request from the client side.
        body:
          application/json:
            type: ErrorResponse
            examples:
              invalid_webhook:
                displayName: Invalid creation request
                value: !include examples/create-webhook-invalid.json
      401:
        displayName: Error
        description: Missing authentication headers
      429:
        displayName: Too many requests
        description: This may happen due to client sending too many requests. Try again a bit later, or decrease amount of requests
      500:
        displayName: Internal Bring error
        description: If this happens, try again a bit later as it might be due to some internal mechanism not working
/api/v1/webhooks/{webhookid}:
  displayName: Delete webhook
  uriParameters:
    webhookid:
      displayName: webhookId
      type: string
      description: This represents the specific identifier of the webhook
  delete:
    description: Remove an existing subscribed webhook
    queryParameters:
      includeWebhook:
        description: If set to true, the deleted webhook will be returned
        type: boolean
        required: false
        example: true
    responses:
      200:
        body:
          application/json:
            type: Webhook
            examples:
              get_webhook:
                displayName: Registered Webhook
                value: !include examples/webhook-request.json
      204:
        displayName: Webhook successfully removed
        description: Webhook unregistered and removed. No content supplied in response
      401:
        displayName: Error
        description: Missing authentication headers
      404:
        displayName: Error
        description: Webhook not found (not registered?)
/api/v1/webhooks/:
  displayName: Get all webhooks
  get:
    description: Get all your current registered and active webhooks.
    responses:
      200:
        body:
          application/json:
            type: Webhook
            examples:
              get_webhook:
                displayName: Registered Webhook
                value: !include examples/webhook-request.json
      400:
        displayName: Bad request
        description: Unable to register webhook due to some bad request from the client side.
        body:
          application/json:
            type: ErrorResponse
            examples:
              invalid_request:
                displayName: Invalid creation request
                value: !include examples/create-webhook-invalid.json
      401:
        displayName: Error
        description: Missing authentication headers.
      404:
        displayName: Error
        description: Webhook not found (not registered?)
/api/v1/webhooks/{webhookId}:
  displayName: Get single webhook
  uriParameters:
    webhookId:
      displayName: webhookId
      type: string
      description: This represents the specific identifier of the webhook
  get:
    description: Get the specification that belongs to a registered webhook
    responses:
      200:
        body:
          application/json:
            type: Webhook
            examples:
              get_webhook:
                displayName: Registered Webhook
                value: !include examples/webhook-request.json
      400:
        displayName: Bad request
        description: Unable to register webhook due to some bad request from the client side.
        body:
          application/json:
            type: ErrorResponse
            examples:
              invalid_request:
                displayName: Invalid creation request
                value: !include examples/create-webhook-invalid.json
      401:
        displayName: Error
        description: Missing authentication headers
      404:
        displayName: Error
        description: Webhook not found (not registered?)
/api/v1/webhooks/{webhookId}/test:
  displayName: Test a push webhook
  description: |
    This will trigger a webhook to receive a dummy request to the registered webhook.

    **Note**: There is no retry mechanism in place for this, so if a request fails for some reason, it will go on un-noticed.
  uriParameters:
    webhookId:
      displayName: webhookId
      type: string
      description: This represents the specific identifier of the webhook
  get:
    description: Get all your current registered and active webhooks
    responses:
      202:
        displayName: Accepted
        description: The request have been registered, and a dummy-request will be sent to the registered webhook
      401:
        displayName: Error
        description: Missing authentication headers
      404:
        displayName: Error
        description: Webhook not found (not registered?)
