<?xml version="1.0" encoding="UTF-8"?>
<Article>
    <MenuTitle>Multi-parcels example</MenuTitle>
    <Ingress>This example shows you how to retrieve total price, expected delivery time and help
        texts for a shipment of multiple parcels.</Ingress>
    <Content>
<![CDATA[
<p>The data used in this example is:</p>
<ul>
	<li><code>from</code>=7041</li>
	<li><code>to</code>=0558</li>
</ul>
<p>Parcels:</p>
<ol>
	<li><code>weightInGrams<strong>0</strong></code>=1500</li>
	<li><code>volume<strong>1</strong></code>=33</li>
	<li><code>length<strong>2</strong></code>=10&amp;<code>width<strong>2</strong></code>=20
		&amp;<code>height<strong>2</strong></code>=30</li>
</ol>
<p>It is possible to combine weight, volume and dimensions for multiple parcels.</p>

<p>Multiple parcels are specified by suffixing <code>weightInGrams</code>, <code>
	volume</code> or dimensions (<code>length</code>, <code>width</code> or <code>height</code>),
	with sequential numbers from 0.</p>

<div class="codetabs">
	<h3><a href="#xml">XML</a></h3>
	<div data-tab="xml" class="tab api-call">
		<p>Request:
			<a target="_blank" class="request"
                href="http://fraktguide.bring.no/fraktguide/products/all.xml?from=7041&amp;to=0558&amp;weightInGrams0=1500&amp;volume1=33&amp;length2=10&amp;width2=20&amp;height2=30"
                data-internal="/proxy/shipping-guide/products/all.xml?from=7041&amp;to=0558&amp;weightInGrams0=1500&amp;volume1=33&amp;length2=10&amp;width2=20&amp;height2=30">
				/all.xml?from=7041&amp;to=0558&amp;weightInGrams0=1500&amp;volume1=33&amp;length2=10&amp;width2=20&amp;height2=30
			</a>
		</p>
		<pre class="xml response delay-snippet"></pre>
	</div>
	
	<h3><a href="#json">JSON</a></h3>
	<div data-tab="json" class="tab api-call">
		<p>Request:
			<a class="request" 
            href="http://fraktguide.bring.no/fraktguide/products/all.json?from=7041&amp;to=0558&amp;weightInGrams0=1500&amp;volume1=33&amp;length2=10&amp;width2=20&amp;height2=30"
            data-internal="/proxy/shipping-guide/products/all.json?from=7041&amp;to=0558&amp;weightInGrams0=1500&amp;volume1=33&amp;length2=10&amp;width2=20&amp;height2=30">
            
				/all.json?from=7041&amp;to=0558&amp;weightInGrams0=1500&amp;volume1=33&amp;length2=10&amp;width2=20&amp;height2=30
			</a>
		</p>
		<pre class="json response delay-snippet"></pre>
		<p>By adding the <code>callback</code> parameter the response will be wrapped in the
			specified JSONP callback function.</p>
	</div>
	
	<h3><a href="#java">Java</a></h3>
	<div data-tab="java" class="tab">
		<pre class="java">// Initialize library
String clientId = "www.mywebshop.com";
BringService bringService = new BringService(clientId);

// Prepare query
Package packet = new Package();
packet.withWeightInGrams("1500");
Package packet2 = new Package();
packet2.withVolume("33");
Package packet3 = new Package();
packet3.withLength("10").withWidth("20").withHeight("30");
Shipment shipment = new Shipment();
shipment.withFromPostalCode("7600");
shipment.withToPostalCode("1407");
shipment.addPackage(packet).addPackage(packet2).addPackage(packet3);

System.out.println(shipment.toQueryString());
// Fetch price information from Bring
ShippingGuideResult shippingGuideResult = bringService.queryShippingGuide(shipment, QueryType.ALL);
String price = shippingGuideResult.getProduct(ProductType.SERVICEPAKKE).getPrice().getPackagePriceWithoutAdditionalServices().getAmountWithoutVAT();
String workingDays = shippingGuideResult.getProduct(ProductType.SERVICEPAKKE).getExpectedDelivery().getWorkingDays();
String descriptionText = shippingGuideResult.getProduct(ProductType.SERVICEPAKKE).getGuiInformation().getDescriptionText();

// Print out
System.out.println("Price: " + price + " NOK");
System.out.println("Working days: " + workingDays);
System.out.println("Display name: " + descriptionText);</pre>
		<p>Expected result:</p>
		<pre>Price: 268.00 NOK
Working days: 2
Display name: RIMI Vinterbro. Åpningstider Man - Fre: 1000-2100, Lør: 0900-1800</pre>
	</div>
</div>
]]>
</Content>
</Article>